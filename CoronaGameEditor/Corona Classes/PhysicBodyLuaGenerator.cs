using System;
using Krea.CoronaClasses;
using System.IO;

namespace Krea.Corona_Classes
{
    class PhysicBodyLuaGenerator
    {
        //---------------------------------------------------
        //-------------------Constantes--------------------
        //---------------------------------------------------
        const String HEADER_LUA = @" module(..., package.seeall)
    -- This file is for use with Krea
    -- 
    -- The function startBody() starts the object body with specific parameters
    -- 
    -- This file is automatically generated with Corona Game Editor by Native-Software. Do not edit

    function startBody(objInstance) ";


        const String FOOTER_LUA = @"
            
        end";


        //---------------------------------------------------
        //-------------------Attributs--------------------
        //---------------------------------------------------
        public PhysicsBody body;
        private String objName;
        //---------------------------------------------------
        //-------------------Constructeurs--------------------
        //---------------------------------------------------
        public PhysicBodyLuaGenerator(PhysicsBody body)
        {
            this.body = body;
            this.objName = body.objectParent.DisplayObject.Name.Replace(" ", "");

        }

        //---------------------------------------------------
        //-------------------Methodes--------------------
        //---------------------------------------------------
        public void writeToLua(DirectoryInfo directoryDest,float XRatio,float YRatio)
        {
            if (this.body != null)
            {
                String FinalString = HEADER_LUA;

                String elementsLua = this.body.getPhysicsParams(this.body.objectParent,XRatio,YRatio);

                if(elementsLua.Equals(""))
                    //Ajouter a la physic
                    FinalString += "\n\n\tphysics.addBody(objInstance.object,\"" + body.Mode.ToString().ToLower() +"\")\n\n";
                else
                    //Ajouter a la physic
                    FinalString += "\n\n\tphysics.addBody(objInstance.object,\"" + body.Mode.ToString().ToLower() + "\"," + elementsLua + ")\n\n";


                FinalString += "\nobjInstance.object.isFixedRotation = " + this.body.isFixedRotation.ToString().ToLower();
                FinalString += "\nobjInstance.hasBody = true\n";

                FinalString += "\nobjInstance.object.isAwake = " + this.body.IsAwake.ToString().ToLower();
                FinalString += "\nobjInstance.object.isBodyActive = " + this.body.IsBodyActive.ToString().ToLower();
                FinalString += "\nobjInstance.object.isSensor = " + this.body.IsSensor.ToString().ToLower();
                FinalString += "\nobjInstance.object.isBullet = " + this.body.IsBullet.ToString().ToLower();
                FinalString += "\nobjInstance.object.isSleepingAllowed = " + this.body.IsSleepingAllowed.ToString().ToLower();

                FinalString += "\nobjInstance.object.angularDamping = " + this.body.AngularDamping.ToString().Replace(",", ".");
                FinalString += "\nobjInstance.object.angularVelocity = " + this.body.AngularVelocity.ToString().Replace(",", ".");
                FinalString += "\nobjInstance.object.linearDamping = " + this.body.LinearDamping.ToString().Replace(",",".");
                FinalString += "\nobjInstance.object:setLinearVelocity(" + this.body.LinearVelocity.X+","+this.body.LinearVelocity.Y+")";

                //Ajouter le pied de page
                FinalString = FinalString + FOOTER_LUA;

                //Ecrire dans le fichier
                File.WriteAllText(directoryDest.FullName + "\\body" + this.body.objectParent.DisplayObject.Name.Replace(" ", "_").ToLower() + ".lua", FinalString);


            }


        }
    }
    
}
